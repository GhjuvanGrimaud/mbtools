// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// em_count
List em_count(NumericMatrix txreads, NumericVector txlengths, int ntx, int nr, int maxit, double cutoff);
RcppExport SEXP _mbtools_em_count(SEXP txreadsSEXP, SEXP txlengthsSEXP, SEXP ntxSEXP, SEXP nrSEXP, SEXP maxitSEXP, SEXP cutoffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type txreads(txreadsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type txlengths(txlengthsSEXP);
    Rcpp::traits::input_parameter< int >::type ntx(ntxSEXP);
    Rcpp::traits::input_parameter< int >::type nr(nrSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type cutoff(cutoffSEXP);
    rcpp_result_gen = Rcpp::wrap(em_count(txreads, txlengths, ntx, nr, maxit, cutoff));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mbtools_em_count", (DL_FUNC) &_mbtools_em_count, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_mbtools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
